version: '3'
services:
  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: myproject.com/php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
      PHP_IDE_CONFIG: "serverName=Docker"
    working_dir: /var/www
    volumes:
      - ./symfony_docker:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
    depends_on:
      - db
    links:
      - db
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./symfony_docker:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

#  #MySQL Service
  db:
    image: postgres:14.1
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: symfony
    volumes:
      - dbdata:/var/lib/postgresql/data
    networks:
      - app-network

#  mongo:
#    image: mongo
#    container_name: mongo
#    restart: unless-stopped
#    command: mongod --bind_ip 0.0.0.0
#    volumes:
#      - mongo:/data/db
#    ports:
#      - "27017:27017"
#    environment:
#      MONGO_INITDB_ROOT_DATABASE: local
#      MONGO_INITDB_ROOT_USERNAME: root
#      MONGO_INITDB_ROOT_PASSWORD: rootpassword
#    networks:
#      - app-network

  mailer:
    image: mailhog/mailhog
    ports:
      - "8082:8025"
#  frontend:
#      image: node:current-alpine
#      working_dir: /app
#      volumes:
#          - ./:/app
#      expose:
#          - "8081"
#      environment:
#          NODE_ENV: development
#      command: bash -c "npm install && npm run dev"

#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
