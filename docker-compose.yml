version: '3'
services:
  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: myproject.com/php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
      PHP_IDE_CONFIG: "serverName=Docker"
    working_dir: /var/www
    volumes:
      - ./symfony_docker:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./symfony_docker:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service
  db:
    image: mariadb:10.5.8
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: symfony
      MYSQL_ROOT_PASSWORD: 12345678
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  mailer:
    image: mailhog/mailhog
    ports:
      - "8082:8025"
#  frontend:
#      image: node:current-alpine
#      working_dir: /app
#      volumes:
#          - ./:/app
#      expose:
#          - "8081"
#      environment:
#          NODE_ENV: development
#      command: bash -c "npm install && npm run dev"

#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
